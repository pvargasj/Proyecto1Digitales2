$date
	Tue May 28 17:16:46 2019
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module BUF $end
$var wire 1 ! A $end
$var wire 1 " Y $end
$upscope $end
$scope module DFF $end
$var wire 1 # C $end
$var wire 1 $ D $end
$var reg 1 % Q $end
$upscope $end
$scope module DFFSR $end
$var wire 1 & C $end
$var wire 1 ' D $end
$var wire 1 ( R $end
$var wire 1 ) S $end
$var reg 1 * Q $end
$upscope $end
$scope module NAND $end
$var wire 1 + A $end
$var wire 1 , B $end
$var wire 1 - Y $end
$upscope $end
$scope module NOR $end
$var wire 1 . A $end
$var wire 1 / B $end
$var wire 1 0 Y $end
$upscope $end
$scope module NOT $end
$var wire 1 1 A $end
$var wire 1 2 Y $end
$upscope $end
$scope module banco_pruebas $end
$var wire 1 3 valid_in_c_0 $end
$var wire 1 4 valid_in_c_1 $end
$var wire 1 5 reset $end
$var wire 8 6 data_out_c_1 [7:0] $end
$var wire 8 7 data_out_c_0 [7:0] $end
$var wire 1 8 data_in_c_1 $end
$var wire 1 9 data_in_c_0 $end
$var wire 1 : clk_f $end
$var wire 1 ; clk_8f $end
$var wire 1 < clk_2f $end
$scope module phy_tx_cond_instance $end
$var wire 1 = clk2f $end
$var wire 1 > clk8f $end
$var wire 1 ? clk_8f0 $end
$var wire 1 @ clk_8f1 $end
$var wire 1 A clk_f0 $end
$var wire 1 B clk_f1 $end
$var wire 1 C reset0 $end
$var wire 1 D reset1 $end
$var wire 1 3 valid_in_c_0 $end
$var wire 1 4 valid_in_c_1 $end
$var wire 1 E valid_out_c_US $end
$var wire 1 F valid_out_c_1 $end
$var wire 1 G valid_out_c_0 $end
$var wire 1 H valid_c_1_SP $end
$var wire 1 I valid_c_0_SP $end
$var wire 1 5 reset $end
$var wire 8 J lane_c_1 [7:0] $end
$var wire 8 K lane_c_0 [7:0] $end
$var wire 8 L data_out_c_US [7:0] $end
$var wire 8 M data_out_c_1 [7:0] $end
$var wire 8 N data_out_c_0 [7:0] $end
$var wire 1 8 data_in_c_1 $end
$var wire 1 9 data_in_c_0 $end
$var wire 1 : clk_f $end
$var wire 1 ; clk_8f $end
$var wire 1 < clk_2f $end
$scope module Byte_un_striping_instance0 $end
$var wire 1 H valid_1 $end
$var wire 1 I valid_0 $end
$var wire 1 5 reset $end
$var wire 8 O lane_1 [7:0] $end
$var wire 8 P lane_0 [7:0] $end
$var wire 1 : clk_f $end
$var wire 1 < clk_2f $end
$var reg 8 Q data_out_c [7:0] $end
$var reg 3 R estado [2:0] $end
$var reg 3 S prox_estado [2:0] $end
$var reg 1 E valid_out_c $end
$upscope $end
$scope module Serie_Paralelo_instance0 $end
$var wire 1 ? clk_8f $end
$var wire 1 A clk_f $end
$var wire 1 C reset $end
$var wire 1 9 data_in $end
$var reg 3 T BC_counter [2:0] $end
$var reg 8 U Data_P [7:0] $end
$var reg 1 V active $end
$var reg 3 W bit_counter [2:0] $end
$var reg 8 X parallel_out_c [7:0] $end
$var reg 1 I valid_out_c $end
$upscope $end
$scope module Serie_Paralelo_instance1 $end
$var wire 1 @ clk_8f $end
$var wire 1 B clk_f $end
$var wire 1 D reset $end
$var wire 1 8 data_in $end
$var reg 3 Y BC_counter [2:0] $end
$var reg 8 Z Data_P [7:0] $end
$var reg 1 [ active $end
$var reg 3 \ bit_counter [2:0] $end
$var reg 8 ] parallel_out_c [7:0] $end
$var reg 1 H valid_out_c $end
$upscope $end
$scope module demux_cond_instance0 $end
$var wire 1 = clk2f $end
$var wire 1 > clk8f $end
$var wire 8 ^ data_in_c [7:0] $end
$var wire 1 E valid_in_c $end
$var wire 1 5 reset $end
$var reg 8 _ data_out_0_c [7:0] $end
$var reg 8 ` data_out_1_c [7:0] $end
$var reg 6 a nxt_st [5:0] $end
$var reg 1 b reset2 $end
$var reg 1 c resetm $end
$var reg 6 d st [5:0] $end
$var reg 1 G valid_out_0_c $end
$var reg 1 F valid_out_1_c $end
$upscope $end
$upscope $end
$scope module probador_inst $end
$var wire 8 e data_out_c_0 [7:0] $end
$var wire 8 f data_out_c_1 [7:0] $end
$var wire 1 3 valid_in_c_0 $end
$var wire 1 4 valid_in_c_1 $end
$var reg 1 < clk_2f $end
$var reg 1 ; clk_8f $end
$var reg 1 : clk_f $end
$var reg 1 9 data_in_c_0 $end
$var reg 1 8 data_in_c_1 $end
$var reg 1 5 reset $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 f
b0 e
bx d
xc
xb
bx a
b0 `
b0 _
b0 ^
bx ]
bx \
x[
bx Z
bx Y
bx X
bx W
xV
bx U
bx T
bx S
bx R
b0 Q
bx P
bx O
b0 N
b0 M
b0 L
bx K
bx J
xI
xH
0G
0F
0E
zD
zC
zB
zA
z@
z?
z>
z=
0<
0;
0:
09
08
b0 7
b0 6
05
z4
z3
z2
z1
x0
z/
z.
x-
z,
z+
x*
z)
z(
z'
z&
x%
z$
z#
z"
z!
$end
#20
1<
1:
15
18
19
1;
#40
0;
#60
09
1;
#80
0;
#100
0<
08
19
1;
#120
0;
#140
1;
#160
0;
#180
1<
0:
18
1;
#200
0;
#220
08
1;
#240
0;
#260
0<
18
09
1;
#280
0;
#300
1;
#320
0;
#340
1<
1:
19
1;
#360
0;
#380
09
1;
#400
0;
#420
0<
08
19
1;
#440
0;
#460
1;
#480
0;
#500
1<
0:
18
1;
#520
0;
#540
08
1;
#560
0;
#580
0<
18
09
1;
#600
0;
#620
1;
#640
0;
#660
1<
1:
19
1;
#680
0;
#700
09
1;
#720
0;
#740
0<
08
19
1;
#760
0;
#780
1;
#800
0;
#820
1<
0:
18
1;
#840
0;
#860
08
1;
#880
0;
#900
0<
18
09
1;
#920
0;
#940
1;
#960
0;
#980
1<
1:
19
1;
#1000
0;
#1020
09
1;
#1040
0;
#1060
0<
08
19
1;
#1080
0;
#1100
1;
#1120
0;
#1140
1<
0:
18
1;
#1160
0;
#1180
08
1;
#1200
0;
#1220
0<
18
09
1;
#1240
0;
#1260
1;
#1280
0;
#1300
1<
1:
19
1;
#1320
0;
#1340
1;
#1360
0;
#1380
0<
08
1;
#1400
0;
#1420
1;
#1440
0;
#1460
1<
0:
18
1;
#1480
0;
#1500
1;
#1520
0;
#1540
0<
1;
#1560
0;
#1580
08
1;
#1600
0;
#1620
1<
1:
18
09
1;
#1640
0;
#1660
1;
#1680
0;
#1700
0<
1;
#1720
0;
#1740
08
19
1;
#1760
0;
#1780
1<
0:
09
1;
#1800
0;
#1820
18
1;
#1840
0;
#1860
0<
08
1;
#1880
0;
#1900
18
19
1;
#1920
0;
#1940
1<
1:
08
1;
#1960
0;
#1980
18
09
1;
#2000
0;
#2020
0<
08
19
1;
#2040
0;
#2060
18
1;
#2080
0;
#2100
1<
0:
1;
#2120
0;
#2140
08
1;
#2160
0;
#2180
0<
18
09
1;
#2200
0;
#2220
1;
#2240
0;
#2260
1<
1:
19
1;
#2280
0;
#2300
09
1;
#2320
0;
#2340
0<
08
19
1;
#2360
0;
#2380
09
1;
#2400
0;
#2420
1<
0:
1;
#2440
0;
#2460
18
1;
#2480
0;
#2500
0<
08
19
1;
#2520
0;
#2540
1;
#2560
0;
#2580
1<
1:
1;
#2600
0;
#2620
18
09
1;
#2640
0;
#2660
0<
08
19
1;
#2680
0;
#2700
1;
#2720
0;
#2740
1<
0:
18
1;
#2760
0;
#2780
08
1;
#2800
0;
#2820
0<
18
09
1;
#2840
0;
#2860
05
1;
#2880
0;
#2900
1;
#2920
0;
#2940
1;
#2960
0;
#2980
1;
#3000
0;
#3020
1;
#3030
